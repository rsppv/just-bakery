@model JustBakery.Models.ProductViewModel
@{ string currentCategory = @Model.Categories.Single(c => c.ProductTypeID == ViewBag.CategoryID).Type;}

@{
    ViewBag.Title = currentCategory + " - Продукция";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-3">
            <ul class="nav nav-pills nav-stacked sidebar">
                @foreach (var cat in Model.Categories)
                {
                    string selectedRow = "";
                    if (cat.ProductTypeID == ViewBag.CategoryID)
                    {
                        selectedRow = "active";
                    }

                    <li class="@selectedRow">
                        <a href="@Url.Action("Index", new { id = cat.ProductTypeID })">@cat.Type</a>
                    </li>
                }
            </ul>
            @*@Html.Action("GetCategories","Product")*@
        </div>
        <div class="col-md-9">
            <h2 class="page-header">@currentCategory</h2>

            @if (User.Identity.IsAuthenticated)
            {

                if (User.IsInRole("manager") || User.IsInRole("admin"))
                {
                    <p>
                        @Html.ActionLink("Добавить продукцию", "Create")
                    </p>
                }
                if (User.IsInRole("customer"))
                {
                    <p>
                        <button type="button" class="btn btn-primary navbar-right">
                            <span class="glyphicon glyphicon-shopping-cart " aria-hidden="true"></span> Оформить заказ
                        </button>
                    </p> 
                }
            }


            <br /><br />
            @if (Model.Products.Count() != 0)
            {
                <table class="table table-striped table-bordered table-hover">
                    <tr class="info">
                        <th>
                            @Html.DisplayNameFor(model => model.Products.First().Image)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Products.First().Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Products.First().Cost)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Products.First().Units)
                        </th>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <th></th>}

                    </tr>

                    @foreach (var item in Model.Products)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Image)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Cost)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Units)
                            </td>
                            @if (User.Identity.IsAuthenticated)
                            {
                                if (User.IsInRole("manager") || User.IsInRole("admin"))
                                {
                                    <td class="center-block text-center col-md-2">
                                        <a href="@Url.Action("Edit", new { id = item.ProductID })" class="btn btn-default btn-xs" role="button">
                                            <span class="glyphicon glyphicon-pencil"></span>
                                        </a>
                                        <a href="@Url.Action("Details", new { id = item.ProductID })" class="btn btn-default btn-xs" role="button">
                                            <span class="glyphicon glyphicon-th-list"></span>
                                        </a>
                                        <a href="@Url.Action("Delete", new { id = item.ProductID })" class="btn btn-default btn-xs" role="button">
                                            <span class="glyphicon glyphicon-minus-sign"></span>
                                        </a>
                                    </td>
                                }
                                else
                                {
                                    <td class="col-md-1">
                                        <a href="#" class="btn btn-default btn-xs center-block text-center" role="button">
                                            @*<a href="@Url.Action("#", new { id = item.ProductID })" class="btn btn-default btn-xs" role="button">*@
                                            <span class="glyphicon glyphicon-usd"></span> Купить
                                        </a>
                                    </td>
                                }
                            }
                        </tr>
                    }

                </table>
            }
            else
            {
                <p class="warning">Продукция данной категории отсутствует</p>
            }
        </div>
    </div>
</div>
